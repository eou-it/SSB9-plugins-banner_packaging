buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "net.saliman:gradle-cobertura-plugin:2.6.0"
    }
}

version "9.33.3"
group "banner.packaging"

apply plugin:"eclipse"
apply plugin:"idea"

apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: 'net.saliman.cobertura'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided  "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.6"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"
    compile files("lib/installerframework-1.1.0.jar")
    compile files("lib/SGHECommonUtil-1.0.1.jar")
    compile files("lib/ant-1.6.5.jar")
    compile files("lib/groovy-all-2.4.17.jar")
}

configurations {
    runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-actuator"
    runtime.exclude group: "org.grails", module: "grails-gorm-testing-support"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    systemProperties(System.properties)
    addResources = true
}

grails
        {
            native2asciiAnt = true
            native2ascii = false
        }

bootRepackage.enabled = false

assets {
    minifyJs = true
    minifyCss = true
}

task selfservicepackaging {
    doFirst {
        String pluginDirectory = project.projectDir.toString()
        System.setProperty('packagingDirectory', pluginDirectory)
        def pathToFolderOfScript = "${pluginDirectory}/src/main/scripts/selfservice-packaging.groovy"
        new GroovyShell().run(file(pathToFolderOfScript))

    }
}

task selfservicepackagesource{
    doFirst {
        String pluginDirectory = project.projectDir.toString()
        def pathToFolderOfScript = "${pluginDirectory}/src/main/scripts/PackageSource.groovy"
        new GroovyShell().run(file(pathToFolderOfScript))
    }
}


assets {
    packagePlugin = true
}

apply plugin: 'codenarc'
dependencies {
    //testRuntime "org.slf4j:slf4j-log4j12:1.7.5"
    //testRuntime "log4j:log4j:1.2.17"
}
codenarc {
    def codenarcRulePath = project(":banner-codenarc").projectDir.absolutePath + "/config/codenarc/rules.groovy"
    configFile = file(codenarcRulePath)
    maxPriority1Violations = Integer.MAX_VALUE
    maxPriority2Violations = Integer.MAX_VALUE
    maxPriority3Violations = Integer.MAX_VALUE
}

sourceSets {
    integrationTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/main/installer/groovy/net/hedtech/banner/installer')
        }
    }
}

integrationTest {
    ignoreFailures = true
}
